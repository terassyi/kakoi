// iam policy document
data "aws_iam_policy_document" "policy-codebuild" {
	statement {
		effect = "Allow"
		actions = [
			"sts:AssumeRole"
		]
		principals {
			type = "Service"
			identifiers = ["codebuild.amazonaws.com"]
		}
	}
}

// iam role for codebuild
resource "aws_iam_role" "kakoi-image-builder" {
	name = "kakoi-image-builder"
	assume_role_policy = "${data.aws_iam_policy_document.policy-codebuild.json}"
}

// iam role document for editing ec2
data "aws_iam_policy_document" "policy-codebuild-ec2" {
	statement {
		effect = "Allow"
		actions = [
			"logs:CreateLogGroup",
			"logs:CreateLogStream",
			"logs:PutLogEvents"
		]
		resources = [
			"*"
		]
	}
	statement {
		effect = "Allow"
		actions = [
			"ec2:AttachVolume",
			"ec2:AuthorizeSecurityGroupIngress",
			"ec2:CopyImage",
			"ec2:CreateImage",
			"ec2:CreateKeypair",
			"ec2:CreateSecurityGroup",
			"ec2:CreateSnapshot",
			"ec2:CreateTags",
			"ec2:CreateVolume",
			"ec2:DeleteKeyPair",
			"ec2:DeleteSecurityGroup",
			"ec2:DeleteSnapshot",
			"ec2:DeleteVolume",
			"ec2:DeregisterImage",
			"ec2:DescribeImageAttribute",
			"ec2:DescribeImages",
			"ec2:DescribeInstances",
			"ec2:DescribeInstanceStatus",
			"ec2:DescribeRegions",
			"ec2:DescribeSecurityGroups",
			"ec2:DescribeSnapshots",
			"ec2:DescribeSubnets",
			"ec2:DescribeTags",
			"ec2:DescribeVolumes",
			"ec2:DetachVolume",
			"ec2:GetPasswordData",
			"ec2:ModifyImageAttribute",
			"ec2:ModifyInstanceAttribute",
			"ec2:ModifySnapshotAttribute",
			"ec2:RegisterImage",
			"ec2:RunInstances",
			"ec2:StopInstances",
			"ec2:TerminateInstances"
		]
		resources = ["*"]
	}
	statement {
		effect = "Allow"
		actions = [
			"s3:GetObject",
			"s3:GetObjectVersion",
			"s3:ListBucket",
			"s3:GetBucketAcl",
			"s3:GetBucketLocation"
		]
		resources = ["*"]
	}
}

// iam role policy
resource "aws_iam_role_policy" "kakoi-image-builder" {
	role = "${aws_iam_role.kakoi-image-builder.name}"
	policy = "${data.aws_iam_policy_document.policy-codebuild-ec2.json}"
}